// Generated by CoffeeScript 1.7.1
var test;

test = {};

beforeEach(function() {
  var item2;
  test.basket = new Basket();
  test.item = new Item(1001, "Macbook Air", "Superb computer", 799);
  item2 = new Item(1002, "Magic TrackPad", "Better than a mouse", 50);
  return test.basket.add(item2, 1);
});

describe("MyBasket Class", function() {
  describe("MyBasket", function() {
    it("should be able to add item to a basket", function() {
      var priorCountVal;
      priorCountVal = test.basket.distinctCount;
      test.basket.add(test.item, 1);
      return expect(test.basket.distinctCount).toEqual(priorCountVal + 1);
    });
    return it("should be able to update quantity when adding an item already in the basket", function() {
      var priorCountVal;
      priorCountVal = test.basket.getQuantity(1001);
      test.basket.add(test.item, 1);
      return expect(test.basket.getQuantity(1001)).toEqual(priorCountVal + 1);
    });
  });
  return describe("getSpecificQuantityForItem", function() {
    it("should be falsy for unknown item", function() {
      var spQ4Item;
      spQ4Item = test.basket.getSpecificQuantityForItem(12345);
      return expect(spQ4Item).toBeFalsy();
    });
    return it("should return false if we pass string instead of an item", function() {
      var spQ4Item;
      spQ4Item = test.basket.getSpecificQuantityForItem("sfkjshdfkjhsd");
      return expect(spQ4Item).toBeFalsy();
    });
  });
});

//# sourceMappingURL=SpecBasket.map
